EXTRN INPUT: far
EXTRN	SDec : NEAR	
EXTRN	UHex : NEAR
PUBLIC x

SSEG SEGMENT PARA STACK 'STACK'
	DB	64 DUP (0)
SSEG ENDS

DSEG SEGMENT PARA PUBLIC 'DATA'
	F DW	SDec, UHex
	x dw 1
	MENU	DB	'MENU:', 10, 13
		DB	'   0. Menu', 10, 13
		DB	'   1. Input number', 10, 13
		DB	'   2. Dec signed', 10, 13
		DB	'   3. Hex unsigned', 10, 13
		DB	'   4. Exit', 10, 13, '$'
		
	ENT	DB	'--> $'
	EMPTY_LINE	DB	10, 13, '$'
DSEG ENDS

CSEG SEGMENT PARA PUBLIC 'CODE'
	ASSUME CS:CSEG, DS:DSEG, SS:SSEG
BEGIN:
	MOV  AX, DSEG
	MOV  DS, AX
PRINT_MENU:
	MOV  AH, 9
	MOV  DX, OFFSET MENU
	INT  21H
PRINT_ENT:
	MOV  AH, 9
	MOV  DX, OFFSET EMPTY_LINE
	INT  21H

	MOV  AH, 9
	MOV  DX, OFFSET ENT
	INT  21H

GET_NUMBER:
	MOV  AH, 1
	INT  21H
		
	CMP  AL, '0'
	JB   GET_NUMBER
	CMP  AL, '4'
	JA   GET_NUMBER
		
	MOV  BL, AL
	XOR  BH, BH
		
	MOV  AH, 9
	MOV  DX, OFFSET EMPTY_LINE
	INT  21H
		
PROCESS:

	SUB BX, '0'

	CMP  BX, 4
	JAE  EXIT
		
	CMP  BX, 0
	JE   PRINT_MENU
		
	CMP  BX, 1
	JE   INPUT_NUMBER

	SUB  BX, 2
	SHL  BX, 1
		
	CALL F[BX]
		
	JMP  PRINT_ENT
		
INPUT_NUMBER:

	call input
	mov x, ax
	
	JMP PRINT_ENT

EXIT:
	MOV  AH, 4CH
	XOR  AL, AL
	INT  21H
		
CSEG	ENDS
END BEGIN
END PRINT_MENU
END PRINT_ENT
END GET_NUMBER
END PROCESS
END INPUT_NUMBER
END EXIT